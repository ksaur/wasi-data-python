tuple_arg: function(x: tuple<char, u32>)
tuple_result: function() -> tuple<char, u32>

record empty {}

empty_arg: function(x: empty)
empty_result: function() -> empty

record scalars {
    a: u32,
    b: u32,
}

scalar_arg: function(x: scalars)
scalar_result: function() -> scalars

record really_flags {
    a: bool,
    b: bool,
    c: bool,
    d: bool,
    e: bool,
    f: bool,
    g: bool,
    h: bool,
    i: bool,
}

flags_arg: function(x: really_flags)
flags_result: function() -> really_flags

record aggregates {
    a: scalars,
    b: u32,
    c: empty,
    d: string,
    e: really_flags,
}

aggregate_arg: function(x: aggregates)
aggregate_result: function() -> aggregates

type tuple_typedef = tuple<s32>
type int_typedef = s32
type tuple_typedef2 = tuple<int_typedef>
typedef_inout: function(e: tuple_typedef2) -> s32
