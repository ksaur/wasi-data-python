(module $legacy
  (typename $f1 (flags $a $b))
  (typename $f2 (flags (@witx repr u64) $c $d $e))
  (typename $r1 (record (field $a u8) (field $b $f1)))
  (typename $e1 (enum $a $b))

  (typename $flag8 (flags $b0 $b1 $b2 $b3 $b4 $b5 $b6 $b7))
  (typename $flag16 (flags
    $b0 $b1 $b2 $b3 $b4 $b5 $b6 $b7
    $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15
  ))
  (typename $flag32 (flags
    $b0 $b1 $b2 $b3 $b4 $b5 $b6 $b7
    $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15
    $b16 $b17 $b18 $b19 $b20 $b21 $b22 $b23
    $b24 $b25 $b26 $b27 $b28 $b29 $b30 $b31
  ))
  (typename $flag64 (flags
    $b0 $b1 $b2 $b3 $b4 $b5 $b6 $b7
    $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15
    $b16 $b17 $b18 $b19 $b20 $b21 $b22 $b23
    $b24 $b25 $b26 $b27 $b28 $b29 $b30 $b31
    $b32 $b33 $b34 $b35 $b36 $b37 $b38 $b39
    $b40 $b41 $b42 $b43 $b44 $b45 $b46 $b47
    $b48 $b49 $b50 $b51 $b52 $b53 $b54 $b55
    $b56 $b57 $b58 $b59 $b60 $b61 $b62 $b63
  ))

  (typename $s8 s8)
  (typename $u8 u8)
  (typename $s16 s16)
  (typename $u16 u16)
  (typename $s32 s32)
  (typename $u32 u32)
  (typename $s64 s64)
  (typename $u64 u64)
  (typename $f32 f32)
  (typename $f64 f64)
  (typename $legacy_result (tuple
      ;; primitives with varying bit widths and signedness
      $s8 $u8
      $s16 $u16
      $s32 $u32
      $s64 $u64
      $f32 $f64
      ;; records
      $r1
  ))

  (@interface func (export "roundtrip_usize") (param $a (@witx usize)) (result $b (@witx usize)))
  (@interface func (export "legacy_flags1") (param $a $flag8) (result $r0 $flag8))
  (@interface func (export "legacy_flags2") (param $a $flag16) (result $r0 $flag16))
  (@interface func (export "legacy_flags3") (param $a $flag32) (result $r0 $flag32))
  (@interface func (export "legacy_flags4") (param $a $flag64) (result $r0 $flag64))

  (@interface func (export "legacy_params")
    (param $a (tuple u32 u32))
    ;; test aggregates
    (param $b $r1)
    ;; tests many kinds of loads
    (param $c (tuple u8 s8 u16 s16 u32 s32 u64 s64 f32 f64))
  )

  (@interface func (export "legacy_result")
    (param $succeed bool)
    (result $b (expected $legacy_result (error $e1)))
  )
)
